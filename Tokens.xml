<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>FBUF_MAXLEN_NONE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a993d9cce2f1efd0251cacbbb816c837b</Anchor>
    <Abstract>No preferred maximum length for fbuf. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBUF_STATIC_INITIALIZER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ad8593ea2aa21d6224dfbd9e9437c08b5</Anchor>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a5bbf3873d69d8f83fb3511f7da6dc66c</Anchor>
    <Abstract>Allocate and initialise a fbuf structure. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_move</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>aa06137d49446356e819eab0cceb36038</Anchor>
    <Abstract>Move the fbuf from one structure to the other. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_swap</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a39f1759d1bd069abcc0c8a4765ad1206</Anchor>
    <Abstract>Exchange the two fbuf structures. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_duplicate</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a394dd6475322d6a5604a570e9e6fad19</Anchor>
    <Abstract>Duplicate the fbuf structure into a new fbuf structure. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_extend</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>aef719f59c276f9f242cfde7dd9282194</Anchor>
    <Abstract>Extend the size of the buffer to newlen. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_shrink</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ab9b318dc4cdd2269b784575bd3b6f974</Anchor>
    <Abstract>Shrink the memory used by the buffer to fit the contents. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_clear</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a3a177311c41ab8295af67d91c646d10a</Anchor>
    <Abstract>Clear the fbuf. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a85a59db235c4ca73d2bfb8b3071ba24a</Anchor>
    <Abstract>Destroys all information in the fbuf. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_free</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a64d3d9629da7ef81ea707581e589fabe</Anchor>
    <Abstract>Deallocates the fbuf structure after destroying it. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_add_binary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ac838cf275a418e358d2d41225b5b64a1</Anchor>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>adb81eb587f061953ff0d360c852a18a2</Anchor>
    <Abstract>Add data to the buffer. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_add_ln</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ab9981daeef36a68fc7864b797ef53797</Anchor>
    <Abstract>Add data to the buffer, including a trailing newline. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_prepend</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a21df1a5926cf956b8d896453a4112b2e</Anchor>
    <Abstract>Prepend the string to the fbuf. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_prepend_binary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a5a17654c83c4c07c9bb10a57fb40fa19</Anchor>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_concat</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ad83c70c7bc71fe525f73bf186b7b6054</Anchor>
    <Abstract>Concatenates fbufsrc after fbufdst. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_copy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a53d0d5362a556cb16a689a2f5f969f37</Anchor>
    <Abstract>Copy the string fbufsrc into fbufdst. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_set</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a28c7e5a55ef80c3ca6040a7f3db95e14</Anchor>
    <Abstract>Set the fbuf to a string. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_printf</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a361d94732f976de466b38b61e24bc104</Anchor>
    <Abstract>Add a string produced through printf to the fbuf. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_fread</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a12bb9f118cd28c648ecaf294e77700bb</Anchor>
    <Abstract>Read at most explen bytes from a file. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_read</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ad82b27564b53e780eacc73e2aae2d8de</Anchor>
    <Abstract>Read at most explen bytes from a file. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_read_ln</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>adf313dc9b51446e21d8c2b79fbea6472</Anchor>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_fread_ln</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a9273a7a697a55ffd30453f0527eab927</Anchor>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_write</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a98ca3094719a4623dc4d70831066c456</Anchor>
    <Abstract>Write data from the fbuf to the file descriptor. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_remove</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>aab1af7d259449553c82a9080ae206ec6</Anchor>
    <Abstract>Remove bytes from the beginning of the buffer. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_trim</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ade3925fd12c4f5ee456bba9ce4d37638</Anchor>
    <Abstract>Remove leading whitespace. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_rtrim</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a9ed4bd8803d41f1ceee1114c63ad6971</Anchor>
    <Abstract>Remove trailing whitespace. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_data</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>aa6ac893db026ed58e4c3ea534798c8d2</Anchor>
    <Abstract>Return a pointer to the buffer. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_end</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a4a6067a97f5c3b70500587e866a88326</Anchor>
    <Abstract>Return a pointer to the end of the buffer (&amp;#39;\0&amp;#39;). </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_set_used</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ac1be357b3ffa582754054f9c8a1bbf4b</Anchor>
    <Abstract>Set the used value on the fbuf. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_used</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ac31470e0ab27d2a0f82f21fad7adb052</Anchor>
    <Abstract>Return the number of characters in the buffer. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_len</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a4f38cd69f69751f9247077ed466edfa3</Anchor>
    <Abstract>Return current length of buffer. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_set_prefmaxlen</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a7986e76d917a915a54e06b46ab184635</Anchor>
    <Abstract>Set the prefmaxlen value on the fbuf. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_prefmaxlen</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a20893876523be9b446fc37dc2fd26755</Anchor>
    <Abstract>Return the currently set preferred maximum length of the buffer. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_set_maxlen</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a3a8083e2a231581d74c1f73c7a1c8ae1</Anchor>
    <Abstract>Set a hard limit on the size of all buffers. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_maxlen</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>af33ea67b9974ff1ea7450ebea4eca1bd</Anchor>
    <Abstract>Return the current hard limit on the size of all buffers. </Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashtable_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ace05395b475bc06fb177b26e49d39d7e</Anchor>
    <Abstract>Opaque structure representing the actual hash table descriptor. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_free_item_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>af161ed5732eaf241e213225e4f4bdc21</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being remov...</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_deep_copy_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a84528d0690638e55d59b2450a868932a</Anchor>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_key_iterator_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ac4fd3a3838e3907c932df496adeb6ad9</Anchor>
    <Abstract>Callback for the key iterator. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_value_iterator_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ab2671cf84e40bec9b6043530315e662f</Anchor>
    <Abstract>Callback for the value iterator. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_pair_iterator_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a308e47d54a253e1f4d449c8e080adf1e</Anchor>
    <Abstract>Callback for the pair iterator. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a18e6cefb6b549178fe5cf72be36b661b</Anchor>
    <Abstract>Create a new table descriptor. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_init</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a182a34e175eed9648d954dfd045f7016</Anchor>
    <Abstract>Initialize a pre-allocated table descriptor. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_set_free_item_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a788342a6b374e13800f74d4979bf622c</Anchor>
    <Abstract>Set the callback which must be called to release values stored in the table. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_clear</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a07073073c6e7b5141d03013dcc20cb87</Anchor>
    <Abstract>Clear the table by removing all the stored items. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a29c3f28d506736317ab22f7c899c5120</Anchor>
    <Abstract>Destroy the table by releasing all its resources. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a2a6ad398fdbe8eda5f9bbb2cb897c538</Anchor>
    <Abstract>Get the value stored at a specific key. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_exists</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ab1d1778575523230aa0a759182c09661</Anchor>
    <Abstract>Check if a key exists in the hashtable. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_copy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>af7bc8e7ca01bfaf3b38f67ad6136ed5b</Anchor>
    <Abstract>Get a copy of the value stored at a specific key. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_deep_copy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a6580d5babb85d99b16ca391c4932f3a3</Anchor>
    <Abstract>Get a copy of the value stored at a specific key. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_set</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a3998c73de95b1d70beea5a1f74ec10eb</Anchor>
    <Abstract>Set the value for a specific key. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_and_set</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a56641e2698e186f285f2f3b534e81faf</Anchor>
    <Abstract>Set the value for a specific key and returns the previous value if any. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_set_copy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ad82c7bb975914dd57eb3ffdd6ebd53bb</Anchor>
    <Abstract>Set the value for a specific key and returns the previous value if any. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_unset</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>acb0cee52fd90674fa4b4803dc9802736</Anchor>
    <Abstract>Unset the value stored at a specific key. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_delete</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a7a4ea1163a3ec648ce62ec76b04ca9a2</Anchor>
    <Abstract>Delete the value stored at a specific key. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>aaac9787728ecc64a959ceefd252432bc</Anchor>
    <Abstract>Return the count of items actually stored in the table. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_all_keys</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a34d9befdf23b777546d376bdd35f6678</Anchor>
    <Abstract>Get all stored keys. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_all_values</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a4d368732b5f4562b547771985f23638a</Anchor>
    <Abstract>Get all stored values. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_foreach_key</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ac782c7ba309e5583075c805639546c79</Anchor>
    <Abstract>Key iterator. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_foreach_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>af6d1d0a58ae358f4a8d3670cfe567ed2</Anchor>
    <Abstract>Value iterator. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_foreach_pair</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ad5ad9c730fe61aa6a95062a5a4d67531</Anchor>
    <Abstract>Pair iterator. </Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TV_TYPE_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ab3c14a55d9569c7f67f63ecb908d9a43</Anchor>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TV_TYPE_BINARY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>af6761dfe1c80fd67146dd589f152d83c</Anchor>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TV_TYPE_LIST</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ae4d45b8aeedfd53b5bbd4ed1ba7c8e82</Anchor>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>free_value_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a1bbfe021a88223b9fcdf5b43b465d79e</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being remov...</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linked_list_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a4a0270278690b38e0be6fc777986be44</Anchor>
    <Abstract>Opaque structure representing the actual linked list descriptor. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>item_handler_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ae09c4acbb9d439745f54e8452177d0fe</Anchor>
    <Abstract>Callback for the value iterator. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_list</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>af7597e9174195aef25a196f3abce0dab</Anchor>
    <Abstract>Create a new list. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init_list</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a070a06644393d37fe6ca88f38a909ba4</Anchor>
    <Abstract>Initialize a pre-allocated list. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy_list</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>aa2d0253e1e9a512272bb1ed0294e38d0</Anchor>
    <Abstract>Release all resources related to the list. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_list</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a24ba290817d86a726fdeec3d353ad859</Anchor>
    <Abstract>remove all items from the list </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>list_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a016eed8897a7ce100d0d8aa7dcfc528d</Anchor>
    <Abstract>Return the total count of items in the list. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_free_value_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>aa8fd43a52f935eda6509e8db64ae1c36</Anchor>
    <Abstract>Set the callback which must be called to release values stored in the list. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>list_lock</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ada2cd1e942329ec4cf6e31d4398cb608</Anchor>
    <Abstract>Lock the list. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>list_unlock</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a700a9630224e88a9347cbb07f0ee713e</Anchor>
    <Abstract>Lock the list. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>af568895a9c1e2a2fb711cc33bbfe1716</Anchor>
    <Abstract>Remove last value from the list. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a6296729063b9a1e5ae05dd8f72e72975</Anchor>
    <Abstract>Append a new value to the list (tail) </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unshift_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>afe4552bf4031ccc12de0da800f8b8098</Anchor>
    <Abstract>Insert a new value at the beginning of the least (head) </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shift_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a0dd51dd5523ea42a6226b20978f0241b</Anchor>
    <Abstract>Remove the first value from the list. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a1a0bb32ce9048b2f403da0cce4988656</Anchor>
    <Abstract>Insert a value at a specific position. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ae11662f4df61c4dd6f0f12cb9ebb1985</Anchor>
    <Abstract>Set the value at a specific position. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subst_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a2bb8c2b2cd1a3bc12dce4959da92a15e</Anchor>
    <Abstract>Replace the value stored at a specific position with a new value. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pick_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>afa569813aeab7e67d10fac3b4da00012</Anchor>
    <Abstract>Pick the value at a specific position. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a38bee6169dd4af116f26a75efdd2bba2</Anchor>
    <Abstract>Fetch (aka: Pick and Remove) the value at a specific position. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>move_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>aa7ee4fe1e2aa8571af9181318135ce8a</Anchor>
    <Abstract>Move an existing value to a new position. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_values</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ad336f010e131a9d1d2b116c2399d45b3</Anchor>
    <Abstract>Swap two values. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>foreach_list_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a2c119e414b8460c7b968ebf22a9c4812</Anchor>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a756f56aaeec780ddee663b02984a0c85</Anchor>
    <Abstract>Allocate resources for a new tagged value. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_tagged_value_nocopy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ad3f56287a9b85941b0a2617b55aefb7d</Anchor>
    <Abstract>Allocate resources for a new tagged value without copying the value. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_tagged_sublist</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ae76f036747f1e8c71fa55a68fd8e7b3b</Anchor>
    <Abstract>Create a tagged value where the value is a linked_list_t. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a3abce60987b7546270b41cf6ad2bfcb7</Anchor>
    <Abstract>Release resources used by the tagged value tval. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a3b47835af00f141e0a83a6ffa25b6efe</Anchor>
    <Abstract>Same as pop_value but expect the value to be a pointer to a tagged_value_t structure. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a9cd09399eefb3477721bdaf20f4dc2ea</Anchor>
    <Abstract>Same as push_value but when using the list to store tagged values. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unshift_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a4ba5915f484e35f310fa139ad16f3bb1</Anchor>
    <Abstract>Same as unshift_value but when using the list to store tagged values. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shift_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a2899998c810475ad9ed6c6ffe45df0a1</Anchor>
    <Abstract>Same as shift_value but when using the list to store tagged values. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a890faa5308b04195e174dd693d4aaf57</Anchor>
    <Abstract>Same as insert_value but when using the list to store tagged values. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pick_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ad341b278e9441fda7c72a27c477f9e99</Anchor>
    <Abstract>Same as pick_value but when using the list to store tagged values. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>aeb70c9a2c24a735171e51cc57c2040dd</Anchor>
    <Abstract>Same as fetch_value but when using the list to store tagged values. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>aba4a0ae06523fddb91e0cdea019675dc</Anchor>
    <Abstract>Get a tagged value from the list by using its tag instead of the position. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_tagged_values</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>adedabd90e8ff5ff2c15b41ecc66eaada</Anchor>
    <Abstract>Get all value pointers for all tagged values matching a specific tag. </Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_free_value_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>afb2f4b048242082c9ab4af6bd68f367f</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being remov...</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>acb6f6f471055946fe9dc5df1436e89a2</Anchor>
    <Abstract>Opaque structure representing the actual linked queue descriptor. </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>a473143a0c95ccae52d2870c0bd3c800f</Anchor>
    <Abstract>Create a new queue. </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_init</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>a9fe3200fa3b05f79737cd7384b93a4e9</Anchor>
    <Abstract>Initialize a pre-allocated queue. </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>a166305c3a00939b16e2e366dbc652029</Anchor>
    <Abstract>Release all resources related to the queue. </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_clear</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>a5ee4eeaf45a9382208927ce71d4e8158</Anchor>
    <Abstract>remove all items from the queue </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>addb4f1d8fd0f498c7554e98065a8948e</Anchor>
    <Abstract>Return the total count of items in the queue. </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_set_free_value_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>ab479822390e21a16960d10eea3a3a8ee</Anchor>
    <Abstract>Set the callback which must be called to release values stored in the queue. </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_pop_right</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>ab6342c556a87ca801abfc52cdba53a49</Anchor>
    <Abstract>Remove last value from the queue. </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_push_right</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>af8b6afebab5a58625896d1356c82ef81</Anchor>
    <Abstract>Append a new value to the queue (tail) </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_push_left</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>acfc384b9bdb307e2080b54ed90a2ca2c</Anchor>
    <Abstract>Insert a new value at the beginning of the least (head) </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_pop_left</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>ae58b98ea5ba96c884dc78cd84680646b</Anchor>
    <Abstract>Remove the first value from the queue. </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_pop_position</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>a4b3c73c12bc0fdd2bd342e23196c9192</Anchor>
    <Abstract>Remove the value at the specified position. </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_push_position</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>ae01574d606b1453ffb4defe1f62c6b67</Anchor>
    <Abstract>Push a new value at a specific position. </Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RBTREE_CMP_KEYS_TYPE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a4c8378e1348c88ddfdd386bff2029f63</Anchor>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a801f239917836505e4680383c2c626ea</Anchor>
    <Abstract>Opaque structure representing the tree. </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_free_value_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a4271725bcaa5d23a9bcf677ca70a2259</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being overw...</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_cmp_keys_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>ae6a58c956b2c0695ca5d4ba70c776c62</Anchor>
    <Abstract>Callback that, if provided, will be used to compare node keys. If not defined memcmp() will be used i...</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_walk_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>afa109a49ce0d2442340419459c1a9ad9</Anchor>
    <Abstract>Callback called for each node when walking the tree. </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a6e7793426c57534ada2d16e9e2bef1e8</Anchor>
    <Abstract>Create a new red/black tree. </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>ae1d60f8535b8d21dbd2fd2fefefebfce</Anchor>
    <Abstract>Release all the resources used by a red/black tree. </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a62e28188ffcee46cddffad87a7d315c8</Anchor>
    <Abstract>Add a new value into the tree. </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_remove</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a91cbdfb6ecfa47c47dd11a6f3f3dc2f1</Anchor>
    <Abstract>Remove a node from the tree. </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_find</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>ad565fcb9a7a0acc280960b23ed3c262e</Anchor>
    <Abstract>Find the value stored in the node node matching a specific key (if any) </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_walk</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>ac845735f658163335990b6495ddae045</Anchor>
    <Abstract>Walk the entire tree and call the provided callback for each visited node. </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_cmp_keys_int16</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>ae7457d99f1314a5a146b228aaecb2a37</Anchor>
    <Abstract>16bit signed integers comparator </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_cmp_keys_int32</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a7553be54ae88791fcf63b116a9435aa3</Anchor>
    <Abstract>32bit signed integers comparator </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_cmp_keys_int64</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a6513c01f943da757d54ebe1b2ebee30f</Anchor>
    <Abstract>64bit signed integers comparator </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_cmp_keys_uint16</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a09876d39799d8d9436e636a53af3b62b</Anchor>
    <Abstract>16bit unsigned integers comparator </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_cmp_keys_uint32</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a4fc4e317530e469c7b51f765a4ed4c20</Anchor>
    <Abstract>32bit unsigned integers comparator </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_cmp_keys_uint64</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a404b896d80c932b50cc64de29a815dda</Anchor>
    <Abstract>64bit unsigned integers comparator </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_cmp_keys_float</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a3bcb95c8402f20ca044b56d131fd4f25</Anchor>
    <Abstract>float comparator </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbtree_cmp_keys_double</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a01e2debf6b32d5c3720240c41de5f489</Anchor>
    <Abstract>double comparator </Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a32d9bf4c520d92a1189c8b45cddc2fa2</Anchor>
    <Abstract>Opaque structure representing a ringbuffer handler. </Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a02662e4f6204e506fd16dfe77a968535</Anchor>
    <Abstract>Create a new ringbuffer. </Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_set_mode</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>afb32b20b3aea070c6059af2dbd6f18e4</Anchor>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_mode</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a1a3fa41660c0debe32f70f0f2b60ea02</Anchor>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_skip</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a2fa510fbd22aacea8d66e7198a1a67f7</Anchor>
    <Abstract>Skip the specified amount of bytes. </Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_read</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a556dae8853404216966e49023df0b38c</Anchor>
    <Abstract>Read the specified amount of bytes from the ringbuffer. </Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_write</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>ab869ffe7fa96bbb2eca9fe7043092c48</Anchor>
    <Abstract>Write the specified amount of bytes into the ringbuffer. </Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_len</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a5fac3b8e6f5e6455e806009fce5d31b6</Anchor>
    <Abstract>Returns the amount of bytes available in the ringbuffer for reading. </Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_find</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>af13c4b4319906ea70c544da775f1d331</Anchor>
    <Abstract>Scan the ringbuffer untill the specific byte is found. </Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_read_until</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a2fe5935df646bc59d7d10f9c5894fa35</Anchor>
    <Abstract>Read until a specific byte is found or maxsize is reached. </Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_clear</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a8e3f4a03599fdcdaf39db675724f9367</Anchor>
    <Abstract>Clear the ringbuffer by eventually skipping all the unread bytes (if any) </Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a6707e5910a6230421e6a683f5bb8c6e3</Anchor>
    <Abstract>Release all resources associated to the rbuf_t structure. </Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RBUF_MODE_BLOCKING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a355d9576621841405dc8dd55b2d87c90a9c3b5f9f6385dd0b7b5ec8eb46317b2f</Anchor>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RBUF_MODE_OVERWRITE</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a355d9576621841405dc8dd55b2d87c90a44bfcddd683f3e158b38eb347bb38f47</Anchor>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_ATOMIC_INCREMENT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a9a8823bebfb34f3ffb0a1fc046117cc7</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_ATOMIC_DECREMENT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a98ba35d55811db14d8c55462b2b36f59</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_ATOMIC_READ</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a2c28aab3f65d8182aeac327baac1c5d5</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_ATOMIC_CMPXCHG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a5b92779f25709677a617fa346cf6a338</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_ATOMIC_CMPXCHG_RETURN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a512324eabd6ec2ece6f8babb4a5ab6dd</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_MARK_ON</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a620f37ba80ce92dde459b83df94b3898</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_MARK_OFF</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a1a00ef8f9f2ea1aae916b9eeaf4a150c</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_IS_MARKED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a9d5cbe64d345ee1438f801ef1d159dba</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a0a4c54fe6e676efdfdef450a20f9184a</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_node_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a1d0f26fb273aeb9dad7434e96b8096b2</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_terminate_node_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a79067844ad82292462a1c1a92fae641f</Anchor>
    <Abstract>Callback called when a node is going to be terminated, which means that its refcount reached 0 and no...</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_free_node_ptr_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a7085f33e5814af06d25541fa6399920d</Anchor>
    <Abstract>Callback called when a node is going to be released and the underlying ptr can be released as well...</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a1ccf9e3a68f8ce43fa9ec514215a2f47</Anchor>
    <Abstract>Create a new refcounted context. </Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a7447f1452af0f46c9fd060ae3252b179</Anchor>
    <Abstract>Release all resources hold by the refcounted context pointed by refcnt. </Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deref_link</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>aaefd29a35d9eddf0e77341d432774f6f</Anchor>
    <Abstract>Atomically creates a reference to a refcounted object. </Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deref_link_d</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>ac41b1b58005f46567f12e58b6767447b</Anchor>
    <Abstract>Atomically creates a reference to a refcounted object. If the object was marked for deletion...</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release_ref</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>abb657009b01ca72cda6a898d336f4148</Anchor>
    <Abstract>Release a reference by decreasing its refcount. </Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare_and_swap_ref</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>ac82fbeffa709f60e15c62be64be293bb</Anchor>
    <Abstract>Atomically compare a reference to a refcounted object with an existing pointer and swap it with a new...</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>new_node</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a785a60c5adef70733a59541b80665aad</Anchor>
    <Abstract>Create a new refcounted node which encapsulates a given pointer. </Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_node_ptr</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>abe836170e50f0fabd6a12a9c0be2ce90</Anchor>
    <Abstract>Retrieve the pointer stored in the refcounted object. </Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retain_ref</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a9b016df9c585b65cac2436c198faa620</Anchor>
    <Abstract>Retain a refcounted object by increasing its refcount. </Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>store_ref</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>af9124ddd2848c9c2da1ae0c4b72f36c2</Anchor>
    <Abstract>Atomically store a reference to a refcounted object in the memory pointed by the provided address...</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>accbc3ef232e863e20201ed60c44029b2</Anchor>
    <Abstract>Opaque structure representing the actual ringbuffer descriptor. </Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_free_value_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a9c2b59c5ab5ad8ef3688c1f9aaf2d6cf</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being overw...</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_set_free_value_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>ac5ea4c1e95761c3480b21a3e34c01ef9</Anchor>
    <Abstract>Set the callback which must be called to release values stored in the ringbuffer. ...</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a425a2514600d8ba4ffb66951f6264abd</Anchor>
    <Abstract>Create a new ringbuffer descriptor. </Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_set_mode</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a9d347fcfa969af8bd672c775e88fd7f1</Anchor>
    <Abstract>Change the mode of an existing ringbuffer. </Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_mode</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a01580394ff3f00f776341ecbb831e8af</Anchor>
    <Abstract>Get the current mode of an existing ringbuffer. </Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_write</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>aae336c36bb271a6b7b9f98f7bd84d8c8</Anchor>
    <Abstract>Push a new value into the ringbuffer. </Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_read</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a15d64f5859c79ce47c2790f33f559eef</Anchor>
    <Abstract>Read the next value in the ringbuffer. </Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>aa2d87f7f450fd7f9d5f39d97c64a1c15</Anchor>
    <Abstract>Release all resources associated to the ringbuffer. </Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_write_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a95fbe59fc6fe70e458fc940e532929d7</Anchor>
    <Abstract>Returns the count of &amp;#39;write operations&amp;#39; executed so far. </Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_read_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a05b2184be7c1423c568de96478a310b7</Anchor>
    <Abstract>Returns the count of &amp;#39;read operations&amp;#39; executed so far. </Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_stats</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a455f5f762c97cc38fea0aa87383063cb</Anchor>
    <Abstract>Return a string descriptions of the ringbuffer internals. </Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RQUEUE_MODE_BLOCKING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a6e7f6a49cc6fcb72d27dd0ebf3f7aed4a8dca6956f92c50d70f4704c500790bbd</Anchor>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RQUEUE_MODE_OVERWRITE</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a6e7f6a49cc6fcb72d27dd0ebf3f7aed4a517a681255c962ba86d24aa4aa347deb</Anchor>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
</Tokens>
